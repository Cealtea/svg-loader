"use strict";const css=`\n@keyframes nodeInserted {\n        from { opacity: 0.99; }\n        to { opacity: 1; }\n    }\n    svg[data-src] {\n        animation-duration: 0.001s;\n        animation-name: nodeInserted;\n    }\n`;const head=document.head||document.getElementsByTagName("head")[0],style=document.createElement("style");head.appendChild(style);style.appendChild(document.createTextNode(css));const isCacheAvailable=e=>{try{const t=JSON.parse(localStorage.getItem(`loader_${e}`)||"{}");if(!t.expiry){return}if(Date.now()<t.expiry){return t.data}else{localStorage.removeItem(`loader_${e}`);return}}catch(e){return}};const setCache=(e,t,r)=>{const n=parseInt(r,10);localStorage.setItem(`loader_${e}`,JSON.stringify({data:t,expiry:Date.now()+(Number.isNaN(n)?60*60*1e3*24:n)}))};const renderBody=(e,t)=>{const r=new DOMParser;const n=r.parseFromString(t,"text/html");const s=n.querySelector("svg");for(let t=0;t<s.attributes.length;t++){const{name:r,value:n}=s.attributes[t];if(!e.getAttribute(r)){e.setAttribute(r,n)}}e.innerHTML=s.innerHTML};const requestsInProgress={};const memoryCache={};const renderIcon=e=>{const t=e.getAttribute("data-src");const r=e.getAttribute("data-cache");const n=isCacheAvailable(t);const s=r!=="disabled";if(memoryCache[t]||s&&n){const r=memoryCache[t]||n;renderBody(e,r)}else{if(requestsInProgress[t]){setTimeout((()=>renderIcon(e)),20);return}requestsInProgress[t]=true;fetch(t).then((e=>e.text())).then((n=>{if(s){setCache(t,n,r)}memoryCache[t]=n;renderBody(e,n)})).finally((()=>{delete requestsInProgress[t]}))}};const intObserver=new IntersectionObserver((e=>{e.forEach((e=>{if(e.isIntersecting){renderIcon(e.target);intObserver.unobserve(e.target)}}))}),{rootMargin:"600px"});document.addEventListener("animationstart",(e=>{const t=e.target;const r=new MutationObserver((e=>{e.forEach((e=>{if(e.attributeName==="data-src"){renderIcon(t)}}))}));r.observe(t,{attributes:true});if(e.animationName==="nodeInserted"){if(t.getAttribute("data-loading")==="lazy"){intObserver.observe(t)}else{renderIcon(t)}}}),false);